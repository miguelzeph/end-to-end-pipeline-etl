services:
  # PostgreSQL for Airflow metadata
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Zookeeper for Kafka
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  # Kafka for streaming data
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    depends_on:
      - zookeeper

  # Airflow Database Initialization (run once)
  airflow-init:
    build:
      context: .
      dockerfile: Dockerfile_airflow
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    command: ["airflow", "db", "init"]
    depends_on:
      - postgres

  # Airflow User Creation (run once)
  airflow-create-user:
    build:
      context: .
      dockerfile: Dockerfile_airflow
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    command: >
      ["airflow", "users", "create", 
       "--username", "admin", 
       "--firstname", "Admin", 
       "--lastname", "User", 
       "--role", "Admin", 
       "--email", "admin@example.com",
       "--password", "admin"]  # Replace "your_password" with a secure password of your choice
    depends_on:
      - airflow-init

  # Airflow Webserver
  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile_airflow
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
    command: webserver
    ports:
      - "8080:8080"
    volumes:
      - ./src/airflow/dags:/opt/airflow/dags
      - airflow_logs:/opt/airflow/logs
    depends_on:
      - postgres
      - airflow-init
      - airflow-create-user  # Ensure user is created before starting webserver

  # Airflow Scheduler
  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile_airflow
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
    command: scheduler
    volumes:
      - ./src/airflow/dags:/opt/airflow/dags
      - airflow_logs:/opt/airflow/logs
    depends_on:
      - postgres
      - airflow-init
      - airflow-create-user

  # Spark service
  spark:
    build:
      context: .
      dockerfile: Dockerfile_spark
    ports:
      - "8081:8081"
    environment:
      SPARK_MASTER_WEBUI_PORT: 8081
      SPARK_MASTER_LOG_DIR: /tmp/spark/logs
    volumes:
      - spark_data:/tmp/spark/data
      - ./src/spark:/opt/spark/work-dir
    depends_on:
      - kafka

  # MongoDB for storing transformed data
  mongodb:
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

volumes:
  postgres_data:
  airflow_logs:
  spark_data:
  mongo_data:
